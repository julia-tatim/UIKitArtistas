import UIKitclass ObraCell: UICollectionViewCell {        private let imageView: UIImageView = {        let iv = UIImageView()        iv.contentMode = .scaleAspectFill        iv.clipsToBounds = true        iv.layer.cornerRadius = 8        iv.layer.maskedCorners = [.layerMinXMinYCorner, .layerMaxXMinYCorner]        return iv    }()        private let tituloLabel: UILabel = {        let label = UILabel()        label.font = UIFont.systemFont(ofSize: 16, weight: .semibold)        label.numberOfLines = 2        label.textAlignment = .center        return label    }()        private let artistaLabel: UILabel = {        let label = UILabel()        label.font = UIFont.systemFont(ofSize: 14)        label.textColor = .secondaryLabel        label.textAlignment = .center        return label    }()        override init(frame: CGRect) {        super.init(frame: frame)        setupViews()        setupShadow()    }        required init?(coder: NSCoder) {        fatalError("init(coder:) has not been implemented")    }        private func setupViews() {        contentView.backgroundColor = .secondarySystemBackground        contentView.layer.cornerRadius = 8        contentView.layer.masksToBounds = true                let stackView = UIStackView(arrangedSubviews: [tituloLabel, artistaLabel])        stackView.axis = .vertical        stackView.spacing = 4        stackView.alignment = .center                contentView.addSubview(imageView)        contentView.addSubview(stackView)                imageView.translatesAutoresizingMaskIntoConstraints = false        stackView.translatesAutoresizingMaskIntoConstraints = false                NSLayoutConstraint.activate([            imageView.topAnchor.constraint(equalTo: contentView.topAnchor),            imageView.leadingAnchor.constraint(equalTo: contentView.leadingAnchor),            imageView.trailingAnchor.constraint(equalTo: contentView.trailingAnchor),            imageView.heightAnchor.constraint(equalTo: contentView.widthAnchor),                        stackView.topAnchor.constraint(equalTo: imageView.bottomAnchor, constant: 8),            stackView.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 8),            stackView.trailingAnchor.constraint(equalTo: contentView.trailingAnchor, constant: -8),            stackView.bottomAnchor.constraint(equalTo: contentView.bottomAnchor, constant: -8)        ])    }        private func setupShadow() {        layer.shadowColor = UIColor.black.cgColor        layer.shadowOffset = CGSize(width: 0, height: 1)        layer.shadowRadius = 2        layer.shadowOpacity = 0.05        layer.masksToBounds = false    }        override func layoutSubviews() {        super.layoutSubviews()        layer.shadowPath = UIBezierPath(roundedRect: bounds, cornerRadius: contentView.layer.cornerRadius).cgPath    }        func configure(with obra: ObraDeArte) {        imageView.image = UIImage(named: obra.imagemNome)        tituloLabel.text = obra.titulo        artistaLabel.text = obra.artista    }}